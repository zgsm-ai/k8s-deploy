apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatgpt
  namespace: shenma
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatgpt
  template:
    metadata:
      labels:
        app: chatgpt
    spec:
      containers:
      - name: chatgpt
        image: docker.sangfor.com/containerd/chatgpt/server:1.5.9
        imagePullPolicy: IfNotPresent
        # command: ["gunicorn", "app:app", "-w", "4", "-b", "0.0.0.0:5000"]
        ports:
        - containerPort: 5000
        - containerPort: 8765
        env:
        - name: TZ
          value: "Asia/Shanghai"
        - name: CACHE_DB
          value: "chatgpt"
        - name: REDIS_URL
          value: "redis://redis:6379/0"
        - name: SERVE_THREADS
          value: "200"
        - name: SERVE_CONNECTION_LIMIT
          value: "512"
        - name: PG_URL
          value: "postgres"
        - name: DB_NAME
          value: "chatgpt"
        - name: DATABASE_URI
          value: "postgresext+pool://keycloak:password@postgres/chatgpt"
        - name: ES_SERVER
          value: "http://quickstart-es-http:9200"
        - name: ES_PASSWORD
          value: "4c6y4g6Z09T2w33pYRNKE3LG"
        - name: DEVOPS_URL
          value: ""
        - name: GEVENT_SUPPORT
          value: "True"
        - name: NO_COLOR
          value: "1"
        - name: DEPLOYMENT_TYPE
          value: "all"
        volumeMounts:
        - name: chatgpt-logs
          mountPath: /server/logs
        - name: chatgpt-logs-supervisor
          mountPath: /var/log/supervisor
        - name: chatgpt-config
          mountPath: /server/config/local.yml
          subPath: local.yml
        - name: chatgpt-agent-chat-py
          mountPath: /server/services/agent_chat.py
          subPath: agent_chat.py
        - name: chatgpt-analysis-manager-py
          mountPath: /server/third_platform/devops/analysis_manager.py
          subPath: analysis_manager.py
        - name: chatgpt-apibot-py
          mountPath: /server/bot/apiBot.py
          subPath: apiBot.py
        - name: chatgpt-base-es-py
          mountPath: /server/third_platform/es/base_es.py
          subPath: base_es.py
        - name: chatgpt-configuration-service-py
          mountPath: /server/services/system/configuration_service.py
          subPath: configuration_service.py
        - name: chatgpt-events-py
          mountPath: /server/controllers/socket/events.py
          subPath: events.py
        - name: chatgpt-appctx-py
          mountPath: /server/common/helpers/application_context.py
          subPath: application_context.py
      volumes:
      - name: chatgpt-logs
        persistentVolumeClaim:
          claimName: chatgpt-logs
      - name: chatgpt-logs-supervisor
        persistentVolumeClaim:
          claimName: chatgpt-logs-supervisor
      - name: chatgpt-config
        configMap:
          name: chatgpt-config
      - name: chatgpt-agent-chat-py
        configMap:
          name: chatgpt-agent-chat-py
      - name: chatgpt-analysis-manager-py
        configMap:
          name: chatgpt-analysis-manager-py
      - name: chatgpt-apibot-py
        configMap:
          name: chatgpt-apibot-py
      - name: chatgpt-base-es-py
        configMap:
          name: chatgpt-base-es-py
      - name: chatgpt-configuration-service-py
        configMap:
          name: chatgpt-configuration-service-py
      - name: chatgpt-events-py
        configMap:
          name: chatgpt-events-py
      - name: chatgpt-appctx-py
        configMap:
          name: chatgpt-appctx-py
---
apiVersion: v1
kind: Service
metadata:
  name: chatgpt
  namespace: shenma
spec:
  type: NodePort
  ports:
  - name: entry
    port: 5000
    targetPort: 5000
    nodePort: 30500
  - name: other
    port: 8765
    targetPort: 8765
    nodePort: 30765
  selector:
    app: chatgpt
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chatgpt-logs
  namespace: shenma
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: chatgpt-logs-supervisor
  namespace: shenma
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chatgpt-config
  namespace: shenma
data:
  local.yml: |
    app:
      PEDESTAL_SERVER:
        server_url: "https://api.deepseek.com"
        api_key: "sk-e0d345b888b6445faef8c583b454141d"
    celery:
      broker_url: "redis://redis:6379/0"
      result_backend: "redis://redis:6379/1"

