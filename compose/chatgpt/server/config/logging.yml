---
version: 1
disable_existing_loggers: True
formatters:
  verbose:
    format: '[%(asctime)s][%(levelname)s][%(name)s:%(filename)s:%(lineno)s:%(funcName)s] %(message)s'
  simple:
    format: '[%(asctime)s][%(levelname)s] %(message)s'
  gunicorn:
    format: '%(message)s'


filters:
  require_debug_true:
    (): lib.log.RequireDebugTrue
  require_debug_false:
    (): lib.log.RequireDebugFalse


handlers:
  base_file_handler: &base_file_handler
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    filename: logs/output.log
    maxBytes: 524288000  # 500Mb
    backupCount: 5
    encoding: utf8

  console:
    class: logging.StreamHandler
    filters:
      - require_debug_true
    level: DEBUG
    stream: ext://sys.stdout

  info_file_handler:
    <<: *base_file_handler
    level: INFO
    formatter: verbose
    filename: logs/output.log

  error_file_handler:
    <<: *base_file_handler
    level: ERROR
    formatter: verbose
    filename: logs/error.log

  request_handler:
    <<: *base_file_handler
    level: DEBUG
    filename: logs/request.log

  gunicorn_handler:
    <<: *base_file_handler
    filename: logs/request.log
    formatter: gunicorn

  peewee_handler:
    <<: *base_file_handler
    filters:
      - require_debug_true
    formatter: simple
    filename: logs/peewee.log

  celery_handler:
    <<: *base_file_handler
    formatter: verbose
    filename: logs/celery.log

  null_handler:
    class: logging.NullHandler


root: &root
  level: DEBUG
  handlers:
    - console
    - info_file_handler
    - error_file_handler
  propagate: false


loggers:
  werkzeug: &request
    level: DEBUG
    handlers:
      - console
      - request_handler
    propagate: false  # prevent from logging duplicated

  gunicorn:
    propagate: false
    level: INFO
    handlers:
      - console
      - gunicorn_handler

  peewee:
    level: DEBUG
    handlers:
      - peewee_handler
    propagate: false

  tasks:
    level: INFO
    handlers:
      - celery_handler

  app:
    <<: *root

  lib:
    <<: *root
